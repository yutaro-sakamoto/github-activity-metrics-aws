// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Metadata": {
    "cdk_nag": {
      "rules_to_suppress": [
        {
          "id": "AwsSolutions-IAM4",
          "reason": "Managed policies are acceptable during the prototype phase",
        },
        {
          "id": "AwsSolutions-L1",
          "reason": "Demo Lambda functions use inline code",
        },
        {
          "id": "AwsSolutions-APIG2",
          "reason": "GitHub webhooks require custom authentication, request validation is implemented with Lambda integration",
        },
        {
          "id": "AwsSolutions-APIG4",
          "reason": "GitHub webhooks require custom authentication, request validation is implemented with Lambda integration",
        },
        {
          "id": "AwsSolutions-COG4",
          "reason": "GitHub webhooks use custom Lambda integration instead of Cognito user pools",
        },
      ],
    },
  },
  "Outputs": {
    "ApiGatewayGitHubWebhookApiEndpointF9B8E967": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayGitHubWebhookApi04159D43",
            },
            ".execute-api.ap-northeast-1.",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "ApiGatewayGitHubWebhookApiDeploymentStagev17CEA2F39",
            },
            "/",
          ],
        ],
      },
    },
    "FirehoseDeliveryStreamName": {
      "Description": "Kinesis Data Firehose stream that processes webhook data",
      "Value": {
        "Ref": "StorageGitHubWebhookDeliveryStreamC6EAA5F4",
      },
    },
    "WebhookApiUrl": {
      "Description": "URL for configuring GitHub Webhook",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayGitHubWebhookApi04159D43",
            },
            ".execute-api.ap-northeast-1.",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "ApiGatewayGitHubWebhookApiDeploymentStagev17CEA2F39",
            },
            "/webhooks",
          ],
        ],
      },
    },
    "WebhookDataBucketName": {
      "Description": "S3 bucket where GitHub webhook data is stored",
      "Value": {
        "Ref": "StorageGitHubWebhookDataBucket3FB595E7",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiGatewayApiGatewayAccessLogsBucketB1D5C7F7": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "Access logs are not enabled for the access logs bucket",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiGatewayApiGatewayAccessLogsBucketPolicy5D47EADE": {
      "Properties": {
        "Bucket": {
          "Ref": "ApiGatewayApiGatewayAccessLogsBucketB1D5C7F7",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ApiGatewayApiGatewayAccessLogsBucketB1D5C7F7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ApiGatewayApiGatewayAccessLogsBucketB1D5C7F7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "ApiGatewayApiGatewayAccessLogsDF8E08D5": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiGatewayGitHubWebhookApi04159D43": {
      "Properties": {
        "Description": "API for receiving GitHub webhooks",
        "Name": "GitHub Webhook API",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiGatewayGitHubWebhookApiAccount5D4378AB": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ApiGatewayGitHubWebhookApi04159D43",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiGatewayGitHubWebhookApiCloudWatchRole6E002E08",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiGatewayGitHubWebhookApiCloudWatchRole6E002E08": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiGatewayGitHubWebhookApiDeployment7D7676D6477dcdf93aea2d87882251183a07b296": {
      "DependsOn": [
        "ApiGatewayGitHubWebhookApiwebhooksPOST1AC74EDD",
        "ApiGatewayGitHubWebhookApiwebhooksCEE10C9B",
      ],
      "Properties": {
        "Description": "API for receiving GitHub webhooks",
        "RestApiId": {
          "Ref": "ApiGatewayGitHubWebhookApi04159D43",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ApiGatewayGitHubWebhookApiDeploymentStagev17CEA2F39": {
      "DependsOn": [
        "ApiGatewayGitHubWebhookApiAccount5D4378AB",
      ],
      "Properties": {
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "ApiGatewayApiGatewayAccessLogsDF8E08D5",
              "Arn",
            ],
          },
          "Format": "{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","user":"$context.identity.user","caller":"$context.identity.caller","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}",
        },
        "DeploymentId": {
          "Ref": "ApiGatewayGitHubWebhookApiDeployment7D7676D6477dcdf93aea2d87882251183a07b296",
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": {
          "Ref": "ApiGatewayGitHubWebhookApi04159D43",
        },
        "StageName": "v1",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ApiGatewayGitHubWebhookApiwebhooksCEE10C9B": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayGitHubWebhookApi04159D43",
            "RootResourceId",
          ],
        },
        "PathPart": "webhooks",
        "RestApiId": {
          "Ref": "ApiGatewayGitHubWebhookApi04159D43",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiGatewayGitHubWebhookApiwebhooksPOST1AC74EDD": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "WebhookHandler40BDAF19",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
          {
            "ResponseModels": {
              "application/json": "Error",
            },
            "StatusCode": "400",
          },
          {
            "ResponseModels": {
              "application/json": "Error",
            },
            "StatusCode": "401",
          },
          {
            "ResponseModels": {
              "application/json": "Error",
            },
            "StatusCode": "500",
          },
        ],
        "RequestParameters": {
          "method.request.header.X-GitHub-Delivery": true,
          "method.request.header.X-GitHub-Event": true,
          "method.request.header.X-Hub-Signature-256": true,
        },
        "ResourceId": {
          "Ref": "ApiGatewayGitHubWebhookApiwebhooksCEE10C9B",
        },
        "RestApiId": {
          "Ref": "ApiGatewayGitHubWebhookApi04159D43",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiGatewayGitHubWebhookApiwebhooksPOSTApiPermissionTesttestApiGatewayGitHubWebhookApi51E82DBFPOSTwebhooksFBE21DD1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "WebhookHandler40BDAF19",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-northeast-1:123456789012:",
              {
                "Ref": "ApiGatewayGitHubWebhookApi04159D43",
              },
              "/test-invoke-stage/POST/webhooks",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewayGitHubWebhookApiwebhooksPOSTApiPermissiontestApiGatewayGitHubWebhookApi51E82DBFPOSTwebhooksD3A1807E": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "WebhookHandler40BDAF19",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:ap-northeast-1:123456789012:",
              {
                "Ref": "ApiGatewayGitHubWebhookApi04159D43",
              },
              "/",
              {
                "Ref": "ApiGatewayGitHubWebhookApiDeploymentStagev17CEA2F39",
              },
              "/POST/webhooks",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "StorageAccessLogsBucketFEE4D6FB": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "Access logs are not enabled for the access logs bucket (prevents infinite loop)",
            },
          ],
        },
      },
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "StorageAccessLogsBucketPolicyA88B4D13": {
      "Properties": {
        "Bucket": {
          "Ref": "StorageAccessLogsBucketFEE4D6FB",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StorageAccessLogsBucketFEE4D6FB",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StorageAccessLogsBucketFEE4D6FB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "StorageFirehoseLogGroup4763FF26": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/aws/kinesisfirehose/github-webhook-delivery",
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "StorageFirehoseRoleBED157D5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StorageFirehoseRoleDefaultPolicy895855CB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Firehose service role and Lambda role have limited permissions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StorageFirehoseLogGroup4763FF26",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StorageGitHubWebhookDataBucket3FB595E7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StorageGitHubWebhookDataBucket3FB595E7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StorageFirehoseRoleDefaultPolicy895855CB",
        "Roles": [
          {
            "Ref": "StorageFirehoseRoleBED157D5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StorageGitHubWebhookDataBucket3FB595E7": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "INTELLIGENT_TIERING",
                  "TransitionInDays": 90,
                },
              ],
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "StorageAccessLogsBucketFEE4D6FB",
          },
          "LogFilePrefix": "github-webhook-data-access-logs/",
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "StorageGitHubWebhookDataBucketPolicy7633F652": {
      "Properties": {
        "Bucket": {
          "Ref": "StorageGitHubWebhookDataBucket3FB595E7",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StorageGitHubWebhookDataBucket3FB595E7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StorageGitHubWebhookDataBucket3FB595E7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "StorageGitHubWebhookDeliveryStreamC6EAA5F4": {
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK",
        },
        "DeliveryStreamName": "github-webhook-delivery-stream",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "StorageGitHubWebhookDataBucket3FB595E7",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "StorageFirehoseLogGroup4763FF26",
            },
            "LogStreamName": "S3Delivery",
          },
          "CompressionFormat": "GZIP",
          "ErrorOutputPrefix": "errors/!{firehose:error-output-type}/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/",
          "Prefix": "github-webhooks/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/",
          "RoleARN": {
            "Fn::GetAtt": [
              "StorageFirehoseRoleBED157D5",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "WebhookHandler40BDAF19": {
      "DependsOn": [
        "WebhookHandlerServiceRoleDefaultPolicyE376E30C",
        "WebhookHandlerServiceRoleF07A4D12",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-ap-northeast-1",
          "S3Key": "68aa5055f7b1774093830cec1b2d9f29f277cf70f956ede54302b45bb0ae02fb.zip",
        },
        "Environment": {
          "Variables": {
            "DELIVERY_STREAM_NAME": {
              "Ref": "StorageGitHubWebhookDeliveryStreamC6EAA5F4",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "WebhookHandlerServiceRoleF07A4D12",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebhookHandlerServiceRoleDefaultPolicyE376E30C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Firehose service role and Lambda role have limited permissions",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:ap-northeast-1:123456789012:parameter/github/metrics/secret-token",
                  ],
                ],
              },
            },
            {
              "Action": [
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StorageGitHubWebhookDeliveryStreamC6EAA5F4",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WebhookHandlerServiceRoleDefaultPolicyE376E30C",
        "Roles": [
          {
            "Ref": "WebhookHandlerServiceRoleF07A4D12",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WebhookHandlerServiceRoleF07A4D12": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
