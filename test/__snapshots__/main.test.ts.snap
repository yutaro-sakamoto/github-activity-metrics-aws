// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Outputs": {
    "FirehoseDeliveryStreamName": {
      "Description": "Webhook データを処理するKinesis Data Firehoseストリーム",
      "Value": {
        "Ref": "GitHubWebhookDeliveryStream",
      },
    },
    "GitHubWebhookApiEndpointC76DEA86": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "GitHubWebhookApi2D780431",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "GitHubWebhookApiDeploymentStagev1468C1CA9",
            },
            "/",
          ],
        ],
      },
    },
    "WebhookApiUrl": {
      "Description": "GitHub Webhookを設定するためのURL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "GitHubWebhookApi2D780431",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "GitHubWebhookApiDeploymentStagev1468C1CA9",
            },
            "/webhooks",
          ],
        ],
      },
    },
    "WebhookDataBucketName": {
      "Description": "GitHubのWebhookデータが保存されるS3バケット",
      "Value": {
        "Ref": "GitHubWebhookDataBucket59529D8E",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiGatewayFirehoseRole53B38461": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiGatewayFirehoseRoleDefaultPolicy6EEADBFD": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "GitHubWebhookDeliveryStream",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiGatewayFirehoseRoleDefaultPolicy6EEADBFD",
        "Roles": [
          {
            "Ref": "ApiGatewayFirehoseRole53B38461",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FirehoseLogGroup1B45149B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/aws/kinesisfirehose/github-webhook-delivery",
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "FirehoseRoleAA67C190": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FirehoseRoleDefaultPolicyF034DFF7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FirehoseLogGroup1B45149B",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "GitHubWebhookDataBucket59529D8E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "GitHubWebhookDataBucket59529D8E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FirehoseRoleDefaultPolicyF034DFF7",
        "Roles": [
          {
            "Ref": "FirehoseRoleAA67C190",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GitHubWebhookApi2D780431": {
      "Properties": {
        "Description": "API for receiving GitHub webhooks",
        "Name": "GitHub Webhook API",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "GitHubWebhookApiAccount710DE531": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "GitHubWebhookApi2D780431",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "GitHubWebhookApiCloudWatchRole091D0A3F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "GitHubWebhookApiCloudWatchRole091D0A3F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "GitHubWebhookApiDeployment97C3ADAFa6c95186ee5da1f49332a248ddd3a60e": {
      "DependsOn": [
        "GitHubWebhookApiwebhooksPOST41C343AD",
        "GitHubWebhookApiwebhooks229D33FB",
      ],
      "Properties": {
        "Description": "API for receiving GitHub webhooks",
        "RestApiId": {
          "Ref": "GitHubWebhookApi2D780431",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "GitHubWebhookApiDeploymentStagev1468C1CA9": {
      "DependsOn": [
        "GitHubWebhookApiAccount710DE531",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "GitHubWebhookApiDeployment97C3ADAFa6c95186ee5da1f49332a248ddd3a60e",
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": {
          "Ref": "GitHubWebhookApi2D780431",
        },
        "StageName": "v1",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "GitHubWebhookApiwebhooks229D33FB": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "GitHubWebhookApi2D780431",
            "RootResourceId",
          ],
        },
        "PathPart": "webhooks",
        "RestApiId": {
          "Ref": "GitHubWebhookApi2D780431",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "GitHubWebhookApiwebhooksPOST41C343AD": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "WebhookRequestAuthorizer35F7A766",
        },
        "HttpMethod": "POST",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "ApiGatewayFirehoseRole53B38461",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseTemplates": {
                "application/json": {
                  "Fn::Join": [
                    "",
                    [
                      "{
                "message": "Webhook received successfully",
                "deliveryStreamName": "",
                      {
                        "Ref": "GitHubWebhookDeliveryStream",
                      },
                      ""
              }",
                    ],
                  ],
                },
              },
              "StatusCode": "200",
            },
            {
              "ResponseTemplates": {
                "application/json": "{"message": "Bad request"}",
              },
              "SelectionPattern": "4\\d{2}",
              "StatusCode": "400",
            },
            {
              "ResponseTemplates": {
                "application/json": "{"message": "Internal server error"}",
              },
              "SelectionPattern": "5\\d{2}",
              "StatusCode": "500",
            },
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{
            "DeliveryStreamName": "",
                  {
                    "Ref": "GitHubWebhookDeliveryStream",
                  },
                  "",
            "Record": {
              "Data": "$util.base64Encode($input.body)"
            }
          }",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":firehose:action/PutRecord",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
          {
            "ResponseModels": {
              "application/json": "Error",
            },
            "StatusCode": "400",
          },
          {
            "ResponseModels": {
              "application/json": "Error",
            },
            "StatusCode": "500",
          },
        ],
        "RequestParameters": {
          "method.request.header.X-GitHub-Delivery": true,
          "method.request.header.X-GitHub-Event": true,
          "method.request.header.X-Hub-Signature-256": true,
        },
        "ResourceId": {
          "Ref": "GitHubWebhookApiwebhooks229D33FB",
        },
        "RestApiId": {
          "Ref": "GitHubWebhookApi2D780431",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "GitHubWebhookDataBucket59529D8E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "INTELLIGENT_TIERING",
                  "TransitionInDays": 90,
                },
              ],
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "GitHubWebhookDeliveryStream": {
      "Properties": {
        "DeliveryStreamName": "github-webhook-delivery-stream",
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "GitHubWebhookDataBucket59529D8E",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 5,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "FirehoseLogGroup1B45149B",
            },
            "LogStreamName": "S3Delivery",
          },
          "CompressionFormat": "GZIP",
          "ErrorOutputPrefix": "errors/!{firehose:error-output-type}/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/",
          "Prefix": "github-webhooks/event=!{partitionKeyFromQuery:event}/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/",
          "RoleARN": {
            "Fn::GetAtt": [
              "FirehoseRoleAA67C190",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "WebhookAuthorizer1AC43164": {
      "DependsOn": [
        "WebhookAuthorizerServiceRoleE3B25EE4",
      ],
      "Properties": {
        "Code": {
          "ZipFile": "
        // GitHubからのWebhook認証Lambda
        exports.handler = async (event) => {
          console.log('Auth Event:', JSON.stringify(event));
          
          try {
            // GitHub Webhookのシークレットトークンを検証
            // 実際の実装では環境変数や AWS Secrets Manager からシークレットを取得
            const expectedSecret = process.env.GITHUB_WEBHOOK_SECRET;
            
            // X-Hub-Signature ヘッダーからの署名を検証
            const signature = event.headers['X-Hub-Signature-256'] || event.headers['x-hub-signature-256'];
            
            if (!signature) {
              console.log('Missing signature header');
              return generatePolicy('user', 'Deny', event.methodArn);
            }
            
            // 実際の実装では、リクエストボディとシークレットを使用して
            // HMAC SHA-256 署名を計算し、GitHubから送信された署名と比較します
            // このサンプルでは簡略化のため、特定の署名パターンをチェック
            const isValid = signature.startsWith('sha256=') && signature.length > 50;
            
            if (!isValid) {
              console.log('Invalid signature');
              return generatePolicy('user', 'Deny', event.methodArn);
            }
            
            // 検証OK
            return generatePolicy('user', 'Allow', event.methodArn);
          } catch (error) {
            console.error('Authorization error:', error);
            return generatePolicy('user', 'Deny', event.methodArn);
          }
        };
        
        // IAM ポリシードキュメントの生成ヘルパー関数
        function generatePolicy(principalId, effect, resource) {
          const authResponse = {
            principalId: principalId,
            policyDocument: {
              Version: '2012-10-17',
              Statement: [
                {
                  Action: 'execute-api:Invoke',
                  Effect: effect,
                  Resource: resource
                }
              ]
            },
            // オプション: コンテキスト情報をLambda統合に渡す
            context: {
              source: 'github-webhook',
              timestamp: new Date().toISOString()
            }
          };
          
          return authResponse;
        }
      ",
        },
        "Environment": {
          "Variables": {
            "GITHUB_WEBHOOK_SECRET": "your-github-webhook-secret-here",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "WebhookAuthorizerServiceRoleE3B25EE4",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebhookAuthorizerServiceRoleE3B25EE4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "WebhookAuthorizertestWebhookRequestAuthorizer92833299PermissionsB2599C16": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "WebhookAuthorizer1AC43164",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "GitHubWebhookApi2D780431",
              },
              "/authorizers/",
              {
                "Ref": "WebhookRequestAuthorizer35F7A766",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebhookRequestAuthorizer35F7A766": {
      "Properties": {
        "AuthorizerResultTtlInSeconds": 0,
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "WebhookAuthorizer1AC43164",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":apigateway:",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "WebhookAuthorizer1AC43164",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "WebhookAuthorizer1AC43164",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": "method.request.header.X-Hub-Signature-256,method.request.header.X-GitHub-Event,method.request.header.X-GitHub-Delivery",
        "Name": "testWebhookRequestAuthorizer92833299",
        "RestApiId": {
          "Ref": "GitHubWebhookApi2D780431",
        },
        "Type": "REQUEST",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
